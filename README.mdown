# What The ... ?

This code is published as a sanity check for performance testing I've been running.

## What's being tested? Why?

I am a somewhat recent convert to the [Markdown](http://daringfireball.net/projects/markdown/) religion. When [Stack Overflow](http://www.stackoverflow.com) went into beta, I started using it heavily and fell madly in love. Thus, when I see an opportunity to use it in my own work, I pounce on it.

I'm working on a ColdFusion application that could benefit from Markdown. As such, I wanted to use a Markdown library - why reinvent the wheel? I've looked at [MarkdownJ](http://code.google.com/p/markdownj/) in the past, but remember some complaints about bugs when the MD syntax gets sufficiently complex. That said, MarkdownJ has an [existing ColdFusion implementation](http://cfxmarkdown.riaforge.org/), which makes it slightly more attractive. However, ColdFusion 8+ has the ability to access .NET assemblies and I just so happen to know of a Markdown implementation in C#, called [MarkdownSharp](http://code.google.com/p/markdownsharp/); and I know that the primary goals of the project are to fix as many of those formatting bugs as possible, and to be fast. And honestly, if it's good enough for those anal-retentive nerds using Stack Overflow every day, it's good enough for me.

I put together a reference implementation to start playing with MD#, but was quickly alerted by some friends that there is a native Java port of MD#, called [jMD](http://github.com/cletus/jmd). The theory was that since ColdFusion runs on the JVM, and jMD is native Java, it would run faster than a .Net assembly being accessed over a Java->.Net bridge.

So far, my testing has *[proven otherwise](http://spreadsheets.google.com/pub?key=tDyjflG97uuSxbCNPB-Rn0w&single=true&gid=0&output=html)*. I'm not sure if it's a nuance of implementation, or if .Net is just better at text parsing with Regex, or something else... but the fact remains that so far my tests show that MD#, even running over the Java->.Net bridge, runs roughly twice as fast as jMD.

### That's where you come in.

I'm posting this code online as a sanity check. If you see a flaw in the tests, please point it out (or fix it!). In the end, my goal is to use the fastest library with the best formatting for my project. I have no agenda: I don't care if it's .Net or Java.
